# Pull a pre-built alpine docker image with nginx and python3 installed
#FROM tiangolo/uwsgi-nginx-flask:python3.6-alpine3.7
FROM tiangolo/uwsgi-nginx-flask:python3.8-alpine

RUN apk --update add bash nano vim git openssh build-base libressl libffi-dev libressl-dev libxslt-dev libxml2-dev xmlsec-dev xmlsec
RUN ssh-keygen -A

# Set the port on which the app runs; make both values the same.
#
# IMPORTANT: When deploying to Azure App Service, go to the App Service on the Azure 
# portal, navigate to the Applications Settings blade, and create a setting named
# WEBSITES_PORT with a value that matches the port here (the Azure default is 80).
# You can also create a setting through the App Service Extension in VS Code.
ENV LISTEN_PORT=5000
EXPOSE 5000 443 2222

# Indicate where uwsgi.ini lives
ENV UWSGI_INI uwsgi.ini

# Tell nginx where static files live. Typically, developers place static files for
# multiple apps in a shared folder, but for the purposes here we can use the one
# app's folder. Note that when multiple apps share a folder, you should create subfolders
# with the same name as the app underneath "static" so there aren't any collisions
# when all those static files are collected together.
ENV STATIC_URL /app/static

# Set the folder where uwsgi looks for the app
WORKDIR /app

# Copy the app contents to the image
COPY src/app /app/app
COPY src/startup.py /app
COPY src/startup.txt /app
COPY src/uwsgi.ini /app


# https://auth.miami.edu/adfs/ls/?wa=wsignoutcleanup1.0
# If you have additional requirements beyond Flask (which is included in the
# base image), generate a requirements.txt file with pip freeze and uncomment
# the next three lines.
COPY src/requirements.txt /
RUN pip install --upgrade pip
RUN pip install --no-cache-dir -r /requirements.txt

# ssh
ENV SSH_PASSWD "root:Docker!"
RUN apk add openssh \
     && echo "root:Docker!" | chpasswd

COPY Env/Dev/docker/sshd_config /etc/ssh/

# ssl
COPY Env/Dev/docker/nginx.key /etc/ssl/private/nginx.key
COPY Env/Dev/docker/nginx.crt /etc/ssl/certs/nginx.crt
COPY Env/Dev/docker/nginx.conf.dist /etc/nginx/conf.d/nginx.conf.dist

# timezone
ENV TZ="America/New_York"

COPY Env/Dev/docker/entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]

CMD [ "python3", "-m" , "flask", "run", "--host=0.0.0.0"]